# Configurations loaded AFTER bootstrap.yml and config server properties
# Can contain local overrides or properties not suitable for config server

avmerkez:
  app:
    jwtSecret: ${JWT_SECRET:c2VjcmV0IGtleSBtdXN0IGJlIGxvbmcgdGhhbiAyNTYgYml0cw==}
    jwtExpirationMs: ${JWT_EXPIRATION_MS:3600000} # Access token: 1 hour
    jwtCookieName: ${JWT_COOKIE_NAME:avm_jwt}
    jwtRefreshExpirationMs: ${JWT_REFRESH_EXPIRATION_MS:604800000} # Refresh token: 7 days (7 * 24 * 60 * 60 * 1000)
    jwtRefreshCookieName: ${JWT_REFRESH_COOKIE_NAME:avm_refresh_token}
    jwtIssuer: ${JWT_ISSUER:avmerkez-user-service}
    jwtAudience: ${JWT_AUDIENCE:avmerkez-api}
    kafka:
      topics:
        user-registration: user-registration-events

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  tracing:
    sampling:
      probability: 1.0
    propagation:
      type: B3

# Default port (can be overridden by environment or config server)
server:
  port: 8083

spring:
  application:
    name: user-service
  # Yeni Spring Cloud Config yaklaşımı - configserver: ile başlayan import'u opsiyonel yap
  config:
    import: optional:configserver:${spring.cloud.config.uri:http://localhost:8888}
  
  # Config Client Configuration
  cloud:
    config:
      fail-fast: false # Config server bulunamazsa fail olma
      enabled: true
      uri: http://localhost:8888
      profile: default
      label: main
      request-connect-timeout: 5000
      request-read-timeout: 10000

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

# Kafka Configuration
spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # Use JsonSerializer for DTOs or StringSerializer for simple strings
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer 
      properties:
        # Disable adding type info headers for cleaner messages if consumers don't rely on it
        spring.json.add.type.headers: false 